generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../server/database/db.sqlite"
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String           @unique()
  description     String?
  price           Float
  tva             Float            @default(0)
  stockMouvements StockMouvement[]
  invoiceItems    InvoiceItem[]
  commandItems    CommandItem[]
}

model Client {
  id       Int       @id @default(autoincrement())
  name     String
  phone    String?
  email    String?
  addresse String?
  invoices Invoice[]
}

model Vendor {
  id       Int       @id @default(autoincrement())
  name     String
  phone    String?
  email    String?
  addresse String?
  commands Command[]
}

model Invoice {
  id           Int           @id @default(autoincrement())
  client       Client        @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  total        Float
  createdAt    DateTime      @default(now())
  clientId     Int
  invoiceItems InvoiceItem[]
}

model InvoiceItem {
  id        Int            @id @default(autoincrement())
  productId Int
  invoiceId Int
  product   Product        @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  invoice   Invoice        @relation(fields: [invoiceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quantity  BigInt
  stockId   Int            @unique
  stock     StockMouvement @relation(fields: [stockId], references: [id], onDelete: NoAction, onUpdate: Cascade)
}

model Command {
  id           Int           @id @default(autoincrement())
  vendor       Vendor        @relation(fields: [vendorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status       String
  createdAt    DateTime      @default(now())
  vendorId     Int
  commandItems CommandItem[]
}

model CommandItem {
  id        Int            @id @unique @default(autoincrement())
  productId Int
  commandId Int
  stockId   Int            @unique
  product   Product        @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  command   Command        @relation(fields: [commandId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quantity  BigInt
  stock     StockMouvement @relation(fields: [stockId], references: [id], onDelete: NoAction, onUpdate: Cascade)
}

model StockMouvement {
  id          Int          @id @default(autoincrement())
  date        DateTime     @default(now())
  model       String
  quantity    BigInt
  commandItem CommandItem?
  invoiceItem InvoiceItem?
  product     Product      @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId   Int
}
